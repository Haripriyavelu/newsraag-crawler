name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Lint with flake8 (optional)
      run: |
        # Install flake8 if you want linting
        # pip install flake8
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        echo "Linting step - add flake8 if desired"
      continue-on-error: true

    - name: Run setup verification tests
      run: |
        python run_tests.py test tests/test_setup_verification.py -v

    - name: Run unit tests
      run: |
        python run_tests.py unit -v -c
      env:
        # Test environment variables
        QDRANT_URL: http://localhost:6333
        QDRANT_API_KEY: test-api-key
        OPENAI_API_KEY: test-openai-key
        AZURE_OPENAI_DEPLOYMENT: test-deployment
        AZ_ACCOUNT_NAME: teststorage
        AZ_ACCOUNT_KEY: test-storage-key
        REDIS_HOST: localhost
        REDIS_PASSWORD: test-password
        APPINSIGHTS_INSTRUMENTATIONKEY: test-insights-key
        ALERT_SLACK_WEBHOOK: https://hooks.slack.com/test
        ALERT_SLACK_ENABLED: false

    - name: Run integration tests (non-external)
      run: |
        python run_tests.py marker integration -v
      env:
        # Same test environment variables
        QDRANT_URL: http://localhost:6333
        QDRANT_API_KEY: test-api-key
        OPENAI_API_KEY: test-openai-key
        ALERT_SLACK_ENABLED: false
      continue-on-error: true  # Allow integration tests to fail without blocking

    - name: Generate coverage report
      run: |
        python run_tests.py coverage
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          coverage.xml
          test-report.*

  # Job to ensure tests pass before allowing deployment
  test-gate:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Tests completed successfully
      run: |
        echo "âœ… All tests completed successfully"
        echo "ðŸš€ Ready for deployment"

  # Optional: Security scanning
  security:
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Bandit Security Scan
      run: |
        pip install bandit[toml]
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true
      continue-on-error: true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json
